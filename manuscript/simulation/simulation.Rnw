\documentclass[nojss]{jss}

\usepackage{amsmath, bm, amssymb}
% \usepackage{graphicx}
\usepackage{natbib}
\usepackage{booktabs}

% For in-house revision purpose only
\usepackage{color}
\newcommand{\blue}[1]{\textcolor{blue}{(#1)}}
\newcommand{\red}[1]{\textcolor{red}{(#1)}}
\begin{document}
<<knitr, echo=FALSE>>=
library(knitr)
opts_chunk$set(cache=TRUE, autodep=TRUE)
@ 


<<corstr>>=
xch <- function(dim, rho) {
    diag(1 - rho, dim) + matrix(rho, dim, dim) 
}
ar1 <- function(dim, rho) {
    rho ^ outer(1:dim, 1:dim, function(x, y) abs(x - y))
}
@


<<datgen, echo=TRUE>>= 
library(mvtnorm)
datgen.rs <- function(nclus, maxclsize, delta = 0., rho = c(0.1, 0.1), cor = c(xch, ar1),
                      rate = 1, grplevel = c("cluster", "individual")) { 
    nn <- nclus * maxclsize
    Sigma1 <- cor(maxclsize, rho[1])
    Sigma2 <- cor(maxclsize, rho[2])
    x <- c(t(rmvnorm(nclus, sigma = Sigma1))) 
    y <- c(t(rmvnorm(nclus, sigma = Sigma2)))
    group <- rep(c(0, 1), each = nn)
    if (grplevel == "individual") group  <- sample(group, nn, FALSE)
    cid <- rep(1:(2 * nclus), each = maxclsize)
    score <- exp(c(x, y)) + delta * group 
    dat <- data.frame(score = score, grp = group, cid = cid) 
    keep <-  sort(sample(1:(2 * nn), size = rate * (2 * nn), FALSE))
    if (rate ==  1) dat else dat[keep, ]      
}
@

<<datagen_sr, echo = TRUE>>=
datgen.sr <- function(nclus, maxclsize, delta = 0.,
                      rho = 0.1, cor = c(xch, ar1), rate = 1) {
    nn <- nclus * maxclsize
    Sigma <- cor(maxclsize, rho)
    z <- c(t(rmvnorm(nclus, sigma = Sigma))) + delta
    score <- sign(z) * exp(abs(z))
    cid <- rep(1:nclus, each = maxclsize)
    dat <- data.frame(score = score, cid = cid)
    keep <- sort(sample(1: nn, size = rate * nn, FALSE))
    if (rate == 1) dat else dat[keep,]
}
@ 


<<simpower>>=
library(clusrank)
simpower <- function(nrep, level, paired, nclus, maxclsize, 
                     delta, rho, cor, rate, ...) {
    do1rep <- function() {
        datgen <- if (paired) datgen.sr else datgen.rs
        formula <- if (paired) score ~ cluster(cid) 
                   else score ~ cluster(cid) + grp
        dat <- datgen(nclus, maxclsize, delta, rho, cor, rate, ...)
        p.rgl <- clusWilcox.test(formula, paired = paired, 
                                 data = dat, method = "rgl")$p.value
         p.ds <- clusWilcox.test(formula, paired = paired, 
                                 data = dat, method = "ds" )$p.value
        c(rgl = p.rgl, ds = p.ds)
    }
    sim <- t(replicate(nrep, do1rep()))
    apply(sim, 2, function(x) mean(x < level))
}
@


<<simpower-exact-1>>=
library(clusrank)
simpower.exact <- function(nrep, level, delta, nclus, ...) {
    do1rep.rgl <- function() {
        formula <- score ~ cluster(cid) + grp
        dat <- datgen.rs(nclus, 1, delta, c(0, 0), 
                         1, grplevel = "c")
        p.rgl <- cluswilcox.test(formula, paired = FALSE,
                                 exact = TRUE,
                                 data = dat, method = "rgl")$p.value
        c(rgl = p.rgl)
    }
    do1rep.w <- function() {
        dat <- datgen.rs(nclus, 1, delta, c(0, 0), 1,
                         grplevel = "c")
        p.w <- wilcox.test(dat[1 : nclus, 1], exact = TRUE,
                           y = dat[(nclus + 1) : (2 * nclus), 1])$p.value
        c(wilcox = p.w)
    }
    set.seed(1234)
    rgl.time <- system.time(sim.rgl <- replicate(nrep, do1rep.rgl()))[1]
    set.seed(1234)
    w.time <- system.time(sim.w <- replicate(nrep, do1rep.w()))[1]
    sim <- cbind(sim.rgl, sim.w)
    rbind(c(rgl.time, w.time), apply(sim, 2, function(x) mean(x < level)))
}
@

<<rgl-exact-wil>>=
## simpower.exact(100, 0.05, 0, 10)
## simpower.exact(100, 0.05, 0.5, 10)
@ 


<<ind-b-xch, echo = FALSE, eval = TRUE>>=
indb.x <- matrix(0, 2, 6)
indb.x[1, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5, 0, c(0.1, 0.1), xch, 1,  "individual")
indb.x[2, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5,  0, c(0.9, 0.9), xch, 1,   "individual")
indb.x[1, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.1, 0.1), xch, 1,   "individual")
indb.x[2, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.9, 0.9), xch, 1,   "individual")
indb.x[1, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.1, 0.1), xch, 1,   "individual")
indb.x[2, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.9, 0.9), xch, 1,   "individual")
@ 

<<ind-ub-xch, echo = FALSE, eval = TRUE>>=
indub.x <- matrix(0, 2, 6)
indub.x[1, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5,  0, c(0.1, 0.1), xch, 0.5,   "individual")
indub.x[2, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5,  0, c(0.9, 0.9), xch, 0.5,   "individual")
indub.x[1, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.1, 0.1), xch, 0.5,   "individual")
indub.x[2, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.9, 0.9), xch, 0.5,   "individual")
indub.x[1, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.1, 0.1), xch, 0.5,   "individual")
indub.x[2, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.9, 0.9), xch, 0.5,   "individual")
@ 


<<ind-b-ar1, echo = FALSE, eval = TRUE>>=
indb.a <- matrix(0, 2, 6)
indb.a[1, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5,  0, c(0.1, 0.1), ar1, 1,   "individual")
indb.a[2, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5,  0, c(0.9, 0.9), ar1, 1,   "individual")
indb.a[1, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.1, 0.1), ar1, 1,   "individual")
indb.a[2, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.9, 0.9), ar1, 1,   "individual")
indb.a[1, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.1, 0.1), ar1, 1,   "individual")
indb.a[2, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.9, 0.9), ar1, 1,   "individual")
@ 

<<ind-ub-ar1, echo = FALSE, eval = TRUE>>=
indub.a <- matrix(0, 2, 6)
indub.a[1, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5,  0, c(0.1, 0.1), ar1, 0.5,   "individual")
indub.a[2, 1:2] <- simpower(1000, 0.05, FALSE, 20, 5,  0, c(0.9, 0.9), ar1, 0.5,   "individual")
indub.a[1, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.1, 0.1), ar1, 0.5,   "individual")
indub.a[2, 3:4] <- simpower(1000, 0.05, FALSE, 20, 5,  0.3, c(0.9, 0.9), ar1, 0.5,   "individual")
indub.a[1, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.1, 0.1), ar1, 0.5,   "individual")
indub.a[2, 5:6] <- simpower(1000, 0.05, FALSE, 20, 5,  0.6, c(0.9, 0.9), ar1, 0.5,   "individual")
@

<<ind-ub-15-xch, echo = FALSE, eval = TRUE>>=
indub15.x <- matrix(0, 2, 6)
indub15.x[1, 1:2] <- simpower(1000, 0.05, FALSE, 20, 10,0, c(0.1, 0.1), xch, 0.25,   "individual")
indub15.x[2, 1:2] <- simpower(1000, 0.05, FALSE, 20, 10,0, c(0.9, 0.9), xch, 0.25,   "individual")
indub15.x[1, 3:4] <- simpower(1000, 0.05, FALSE, 20, 10,0.3, c(0.1, 0.1), xch, 0.25,   "individual")
indub15.x[2, 3:4] <- simpower(1000, 0.05, FALSE, 20, 10,0.3, c(0.9, 0.9), xch, 0.25,   "individual")
indub15.x[1, 5:6] <- simpower(1000, 0.05, FALSE, 20, 10,0.6, c(0.1, 0.1), xch, 0.25,   "individual")
indub15.x[2, 5:6] <- simpower(1000, 0.05, FALSE, 20, 10,0.6, c(0.9, 0.9), xch, 0.25,   "individual")
@ 

<<ind-ub-15-ar1, echo = FALSE, eval = TRUE>>=
indub15.a <- matrix(0, 2, 6)
indub15.a[1, 1:2] <- simpower(1000, 0.05, FALSE, 20, 10, 0, c(0.1, 0.1), ar1, 0.25,   "individual")
indub15.a[2, 1:2] <- simpower(1000, 0.05, FALSE, 20, 10, 0, c(0.9, 0.9), ar1, 0.25,   "individual")
indub15.a[1, 3:4] <- simpower(1000, 0.05, FALSE, 20, 10, 0.3, c(0.1, 0.1), ar1, 0.25,   "individual")
indub15.a[2, 3:4] <- simpower(1000, 0.05, FALSE, 20, 10, 0.3, c(0.9, 0.9), ar1, 0.25,   "individual")
indub15.a[1, 5:6] <- simpower(1000, 0.05, FALSE, 20, 10, 0.6, c(0.1, 0.1), ar1, 0.25,   "individual")
indub15.a[2, 5:6] <- simpower(1000, 0.05, FALSE, 20, 10, 0.6, c(0.9, 0.9), ar1, 0.25,   "individual")
@ 


<<rs-tab, echo = FALSE, eval = TRUE, results = 'asis'>>=
sum.tab <- rbind(indb.x, indub.x, indb.a, indub.a, indub15.x, indub15.a)
library(xtable)
xtable(sum.tab)
## library(xtable)
## sum.tab <- rbind(clusb, clusub, indb, indub, indub15)
## rownames(sum.tab) <- c("clus, bal, $\\rho = 0.1$", 
##                        "clus, bal, $\\rho = 0.9$",
##                        "clus, unbal, $\\rho = 0.1$",
##                        "clus, unbal, $\\rho = 0.9$",
##                        "ind, bal, $\\rho = 0.1$", 
##                        "ind, bal, $\\rho = 0.9$",
##                        "ind, unbal, $\\rho = 0.1$",
##                        "ind, unbal, $\\rho = 0.9$",
##                        "ind, unbal, maxsize = 10, $\\rho = 0.1$",
##                        "ind, unbal, maxsize = 10, $\\rho = 0.9$")
## addtorow <- list()
## addtorow$pos <- list( 0, 0)
## addtorow$command <-
##     c(" & \\multicolumn{2}{c}{size} & \\multicolumn{2}{c}{power} \\\\\n", "& RGL & DS & RGL & DS \\\\\n")
## print(xtable(sum.tab, caption = 'Simulation for clustered rank sum test, comparsion between RGL and DS'), caption.placement = 'top',  add.to.row = addtorow, include.colnames = FALSE,
##       sanitize.rownames.function = function(x){x}, booktabs = TRUE)                       
@ 


<<sr-b-xch, echo = FALSE, eval = TRUE>>=
srb.x <- matrix(0, 2, 6) 
srb.x[1, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.1, xch, 1)
srb.x[2, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.9, xch, 1)
srb.x[1, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.1, xch, 1)
srb.x[2, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.9, xch, 1)
srb.x[1, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.1, xch, 1)
srb.x[2, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.9, xch, 1)
@ 

<<sr-ub-xch, echo = FALSE, eval = TRUE>>=
srub.x <- matrix(0, 2, 6) 
srub.x[1, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.1, xch, 0.5)
srub.x[2, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.9, xch, 0.5)
srub.x[1, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.1, xch, 0.5)
srub.x[2, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.9, xch, 0.5)
srub.x[1, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.1, xch, 0.5)
srub.x[2, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.9, xch, 0.5)
@ 

<<sr-b-ar1, echo = FALSE, eval = TRUE>>=
srb.a <- matrix(0, 2, 6) 
srb.a[1, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.1, ar1, 1)
srb.a[2, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.9, ar1, 1)
srb.a[1, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.1, ar1, 1)
srb.a[2, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.9, ar1, 1)
srb.a[1, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.1, ar1, 1)
srb.a[2, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.9, ar1, 1)
@ 

<<sr-ub-ar1, echo = FALSE, eval = TRUE>>=
srub.a <- matrix(0, 2, 6) 
srub.a[1, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.1, ar1, 0.5)
srub.a[2, 1:2] <- simpower(1000, 0.05, TRUE, 40, 5, 0, 0.9, ar1, 0.5)
srub.a[1, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.1, ar1, 0.5)
srub.a[2, 3:4] <- simpower(1000, 0.05, TRUE, 40, 5, 0.3, 0.9, ar1, 0.5)
srub.a[1, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.1, ar1, 0.5)
srub.a[2, 5:6] <- simpower(1000, 0.05, TRUE, 40, 5, 0.6, 0.9, ar1, 0.5)
@ 





<<sr-tab, echo = FALSE, eval = TRUE, results = 'asis'>>=
sum.tab <- rbind(srb.x, srub.x, srb.a, srub.a)
xtable(sum.tab)
## library(xtable)
## sum.tab <- rbind(srb, srub, srub10)
## rownames(sum.tab) <- c("bal, $\\rho = 0.1$", 
##                        "bal, $\\rho = 0.1, 0.9$",
##                        "bal, $\\rho = 0.9$",
##                        "unbal, $\\rho = 0.1$",
##                        "unbal, $\\rho = 0.1, 0.9$",
##                        "unbal, $\\rho = 0.9$" ,
##                        "unbal, maxsize = 10, $\\rho = 0.1$",
##                        "unbal, maxsize = 10, $\\rho = 0.1, 0.9$",
##                        "unbal, maxsize = 10, $\\rho = 0.9$")
## addtorow <- list()
## addtorow$pos <- list( 0, 0)
## addtorow$command <-
##     c(" & \\multicolumn{2}{c}{size} & \\multicolumn{2}{c}{power} \\\\\n", "& RGL & DS & RGL & DS \\\\\n")
## print(xtable(sum.tab, 
##              caption = 'Simulation for clustered signed rank test, comparsion between RGL and DS', digits = 3), 
##       caption.placement = 'top',  add.to.row = addtorow,
##       include.colnames = FALSE,
##       sanitize.rownames.function = function(x){x}, 
##       booktabs = TRUE)   
@ 

The standard error of the empirical power can be estimated as $0.5 /
\sqrt{1000} = 0.032$, therefore we state that there is a significant
difference between the empirical power of the two methods at a
significance level $0.05$ if the absolute difference is more than
$0.008 * 1.96 * \sqrt{2} = 0.022.$ In all of the cases listed in the
above table, these two methods are comparable. For the empirical size,
the standard error can be estimated as $\sqrt{0.05 * 0.95} /
\sqrt{1000} = 0.012$, therefore we state that there is a significant
deviation from the norminal level $0.05$ if the deviation of the
empirical size from $0.05$ is more than $0.003 * 1.96 = 0.028$,
according to which the RGL method underestimate the size in all of the
cases where the intra-cluster correlation is low on average, though
the DS method also tends to have a lower empirical size when
intra-cluster correlation is low, it does maintain an empirical size
close to the nominal level in almost all of the cases. 

\end{document}
